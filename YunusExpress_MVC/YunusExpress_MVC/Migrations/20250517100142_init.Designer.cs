// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YunusExpress_MVC.DataAccess;

#nullable disable

namespace YunusExpress_MVC.Migrations
{
    [DbContext(typeof(YunusExpressDbContext))]
    [Migration("20250517100142_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeliveryZoneTypeSender", b =>
                {
                    b.Property<int>("DeliveryZonesId")
                        .HasColumnType("int");

                    b.Property<int>("SendersSenderId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryZonesId", "SendersSenderId");

                    b.HasIndex("SendersSenderId");

                    b.ToTable("DeliveryZoneTypeSender");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Courier", b =>
                {
                    b.Property<int>("CourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourierId"));

                    b.Property<int>("CourierCode")
                        .HasColumnType("int");

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourierPhoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("CourierId");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.DeliveryZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryZoneTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryZoneTypeId");

                    b.ToTable("DeliveryZones");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.DeliveryZoneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryZoneTypes");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourierId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("EDV")
                        .HasColumnType("bit");

                    b.Property<int>("FromCourierId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverPhoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderPhoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SpecialPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToCourierId")
                        .HasColumnType("int");

                    b.Property<string>("ZengEdeninAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.HasIndex("DeliveryZoneId");

                    b.HasIndex("FromCourierId");

                    b.HasIndex("InvoiceNo")
                        .IsUnique();

                    b.HasIndex("OrderNo")
                        .IsUnique();

                    b.HasIndex("ReceiverId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ToCourierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Receiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankVoen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEDV")
                        .HasColumnType("bit");

                    b.Property<string>("Mh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("QiymetVar")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ReceiverPhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Swift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Sender", b =>
                {
                    b.Property<int>("SenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SenderId"));

                    b.Property<string>("SenderAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderPhoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SenderId");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.ServiceTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("DeliveryZoneTypeSender", b =>
                {
                    b.HasOne("YunusExpress_MVC.Models.DeliveryZoneType", null)
                        .WithMany()
                        .HasForeignKey("DeliveryZonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YunusExpress_MVC.Models.Sender", null)
                        .WithMany()
                        .HasForeignKey("SendersSenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.DeliveryZone", b =>
                {
                    b.HasOne("YunusExpress_MVC.Models.DeliveryZoneType", "DeliveryZoneType")
                        .WithMany("Zones")
                        .HasForeignKey("DeliveryZoneTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryZoneType");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Order", b =>
                {
                    b.HasOne("YunusExpress_MVC.Models.Courier", null)
                        .WithMany("Orders")
                        .HasForeignKey("CourierId");

                    b.HasOne("YunusExpress_MVC.Models.DeliveryZone", "DeliveryZone")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YunusExpress_MVC.Models.Courier", "FromCourier")
                        .WithMany()
                        .HasForeignKey("FromCourierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YunusExpress_MVC.Models.Receiver", "Receiver")
                        .WithMany("Orders")
                        .HasForeignKey("ReceiverId");

                    b.HasOne("YunusExpress_MVC.Models.ServiceTypes", "ServiceType")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YunusExpress_MVC.Models.Courier", "ToCourier")
                        .WithMany()
                        .HasForeignKey("ToCourierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DeliveryZone");

                    b.Navigation("FromCourier");

                    b.Navigation("Receiver");

                    b.Navigation("ServiceType");

                    b.Navigation("ToCourier");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Courier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.DeliveryZone", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.DeliveryZoneType", b =>
                {
                    b.Navigation("Zones");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.Receiver", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("YunusExpress_MVC.Models.ServiceTypes", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
