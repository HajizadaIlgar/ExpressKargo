@using YunusExpress_MVC.Models
@using YunusExpress_MVC.ViewModels
@model OrderUpdateVm

@{
    Layout = null;
    ViewData["Title"] = "Yeni Sifariş Yarat";
}


<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Yeni Sifariş</title>
  <link href="~/assets/style/newOrder.css" rel="stylesheet">
    <link href="~/assets/favicon.ico" rel="icon" />
</head>


<body>
  <h1>Yeni Sifariş</h1>
  <div class="container">
        <form method="post" id="order-form">
      <div class="vcontainer">
        <div class="form-heading">
          <div class="rows" style="display:flex;flex-direction:column;">
             <div class="row">
                <div class="text-section">
                  <label@*  asp-for="OrderNo" *@  class="text-label" style="width: 100px;">Sifariş No</label>
                  <input asp-for="OrderNo"  type="text" class="text-input" style="width:100px;" readonly/>
                </div>
              <div class="text-section">
                <label asp-for="InvoiceNo" class="text-label" style="width:35px;">Veybil</label>
                <input asp-for="InvoiceNo" type="text" class="text-input" style="width:100px;" />
              </div>
            </div>
             <div class="row">
                                           <!-- Receiver seçimi üçün input -->
                        <div class="text-section">
                            <label style="width:100px;" class="text-label">Klientin Kodu</label>
                            <input class="text-input" list="receiverList" id="receiverInput" style="width:100px;" />
                            <datalist id="receiverList"></datalist>
                        </div>

                        <!-- Müştəri kodunu göstərən input -->
                        <div class="text-section">
                            <input type="text" id="clientCode" class="text-input" readonly style="width:100px;" />
                        </div>
                        <div style="display:none">
                            <input id="priceType" value="" readonly  />
                            <input id="edvType" value="" readonly />
                        </div>
             </div>
                            <div >
                                <label style="width:100px" asp-for="ZengEdeninAdi" class="text-label">Zəng Edənin Adı</label>
                                <input asp-for="ZengEdeninAdi" type="text" class="text-input" style="width:100px;" />
                            </div>

          </div>
          
        </div>
        <div class="main-colls">
          <div class="left-coll">
            <div class="sender">
              <div class="sender-heading">
                <h2>GÖNDƏRƏN</h2>
              </div>
              <div class="sender-main">
                <div class="text-section" style="width: 300px;">
                  <label  asp-for="ReceiverName" class="text-label" style="width: 100px;">Göndərənin Adı</label>
                  <input asp-for="ReceiverName" type="text" class="text-input" id="senderName">
                </div>
                <div class="text-section" style="width: 300px;">
                  <label asp-for="ReceiverAddress" class="text-label" style="width: 100px;">Ünvanı</label>
                  <input asp-for="ReceiverAddress" type="text" class="text-input" id="senderAdd">
                </div>
                <div class="text-section" style="width: 300px;">
                  <label asp-for="ReceiverPhoneNum" class="text-label" style="width: 100px;">Nömrəsi</label>
                  <input asp-for="ReceiverPhoneNum" type="number" class="text-input" id="senderNum">
                </div>
                 <div class="text-section" style="width: 300px;">
                                <label asp-for="DeliveryZoneId" class="text-label" style="width:93px">Zona</label>
                                <select class="input-select" asp-for="DeliveryZoneId" asp-items="ViewBag.DeliveryZone"
                                        style="width: 187px;" id="zoneSelect">
                                    <option disabled selected>Seçin...</option>
                                </select>
                 </div>
              </div>
            </div>
            <div>
                <button onclick="transferValues()" type="button" class="opposite-button">ƏKS <span>&#8645;</span></button>
            </div> 
            <!-- SENDER  -->
            <div class="sender">
              <div class="sender-heading">
                <h2>ALAN</h2>
              </div>
              <div class="sender-main">
                <div class="text-section" style="width: 300px;">
                  <label asp-for="SenderName" class="text-label" style="width: 100px;">Göndərənin Adı</label>
                  <input asp-for="SenderName" type="text" class="text-input" id="acceptName">
                </div>
                <div class="text-section" style="width: 300px;">
                  <label asp-for="SenderAddress" class="text-label" style="width: 100px;">Ünvanı</label>
                  <input asp-for="SenderAddress" type="text" class="text-input" id="acceptAdd">
                </div>
                <div class="text-section" style="width: 300px;">
                  <label asp-for="SenderPhoneNum" class="text-label" style="width: 100px;">Nömrəsi</label>
                  <input asp-for="SenderPhoneNum" type="number" class="text-input" id="acceptNum">
                </div>

              </div>
            </div>
          </div>
          <div class="right-coll">
                        <div class="desc-text">
                            <label class="text-label" for="start-date">Tarix</label>
                            <div class="desc-time">
                                <input asp-for=StartDate type="date" id="start-date" name="StartDate_Date" class="desc-input-t" />
                                <input asp-for="StartDate" type="time" id="start-time" name="StartDate_Time" class="desc-input-t" />
                            </div>
                        </div>

                        <!-- Gizli input, burada birləşdirilmiş datetime olacaq -->
                        <input type="hidden" id="StartDate" name="StartDate" />
                          <div class="desc-text">
                    
                            <label asp-for="ServiceId" class="text-label">Xidmət Növü</label>
                            <select id="serviceType" class="desc-select" asp-for="ServiceId" asp-items='new SelectList(ViewBag.Service,"Id","ServiceType")'>
                                <option></option>
                            </select>
                          </div>

                        <div class="desc-text">
                            <label class="text-label" for="from-courier">Kuryer 1</label>
                            <select class="desc-select form-control" asp-for="FromCourierId" asp-items='new SelectList(ViewBag.Courier,"CourierId","DisplayText")' id="from-courier">
                                <option disabled selected>Seçin...</option>
                            </select>
                        </div>

                        <div class="desc-text">
                            <label class="text-label" for="to-courier">Kuryer 2</label>

                            <select class="desc-select form-control" asp-for="ToCourierId" asp-items='new SelectList(ViewBag.Courier,"CourierId","DisplayText")' id="to-courier">
                                <option disabled selected>Seçin...</option>
                            </select>
                        </div>

                       
            <div class="desc-text">
           
            </div>

            <div class="desc-text">
              <label asp-for="OrderPrice" class="text-label">Qiymət</label>
              <input asp-for="OrderPrice" type="text" id="orderPrice" class="desc-input" >
            </div>

            <div class="desc-text">
              <label asp-for="SpecialPrice" class="text-label">Xüsusi Qiymət</label>
              <input asp-for="SpecialPrice" type="text" id="SpecialPrice" class="desc-input">
            </div>
            <div class="desc-text">
              <label asp-for="Discount" class="text-label">Güzəşt %</label>
              <input asp-for="Discount" id="discount" type="text" class="desc-input">
            </div>
            <div class="desc-text">
              <label class="text-label">Cəmi</label>
              <input type="text" class="desc-input" id="subtotal" readonly>
            </div>
            <div class="desc-text">
              <label class="text-label">ƏDV (18%)</label>
              <input type="text" class="desc-input" id="edv" readonly>
            </div>
            <div class="desc-text">
              <label asp-for="FinalPrice" class="text-label">Yekun</label>
              <input asp-for="FinalPrice" type="text" class="desc-input" id="total" readonly>
            </div>
            <div class="desc-text">
              <label asp-for="Note" class="text-label">Əlavə Qeyd</label>
              <textarea asp-for="Note" name="" class="desc-text-ar"></textarea>
            </div>
            <div class="btns">
              <button type="submit" class="btn-submit">Qeyd Et Və Çıx</button>
            </div>
          </div>
        </div>
        </div>
    </form>
    <div class="back-btn">
      <a asp-controller="Home" asp-action="Index">⬅</a>
    </div>
  </div>


      <script>
                window.addEventListener('DOMContentLoaded', async () => {
  try {
    const response = await fetch('/Order/ReceiverData');
    if (!response.ok) throw new Error('Network response was not ok');

    // Gələn məlumatı json kimi oxuyuruq
    const data = await response.json(); // data massiv ola bilər, məsələn [{ senderName, receiverName, clientCode }, ...]

    // senderName inputunu tapırıq
    const senderInput = document.querySelector('#senderName');
    const receiverInput = document.querySelector('#receiverInput');
    const clientCodeInput = document.querySelector('#clientCode');
   

    if (!senderInput) {
      console.warn('senderName input tapılmadı');
      return;
    }

    const senderValue = senderInput.value;

    // Məlumatlar içindən senderValue-ya uyğun olanı tapırıq
    const matched = data.find(item => item.receiverName === senderValue);
    if (matched) {
       receiverInput.value = matched.clientCode || '';
       clientCodeInput.value = matched.receiverName || '';
          priceCalculation()  ;     
pricePutter();
    } else {
      console.log('Uyğun məlumat tapılmadı');
      if (receiverInput) receiverInput.value = 'amcig';
      if (clientCodeInput) clientCodeInput.value = 'amcig';

    }
  } catch (error) {
    console.error('Fetch error:', error);
  }
});
 //datalistin doldurulmasi
        let receivers = [];

        document.addEventListener("DOMContentLoaded", async () => {
            try {
                const response = await fetch('/Order/ReceiverData');
                if (!response.ok) throw new Error("Şəbəkə xətası!");

                receivers = await response.json();
                

                const datalist = document.getElementById("receiverList");
                datalist.innerHTML = "";

                // Option dəyərlərini: "1 Veysel_MMC" şəklində göstər
                receivers.forEach(receiver => {
                    const option = document.createElement("option");
                    option.value = `${receiver.clientCode} ${receiver.receiverName}`; 
                    option.dataset.clientcode = receiver.clientCode; 
                    option.dataset.receivername = receiver.receiverName; 
                    datalist.appendChild(option);
                });

            } catch (error) {
                console.error("Receiver dataları alınmadı:", error);
            }
        });
        
      //datalistden secilen secime gore inpularin doldurulmasi
      document.getElementById("receiverInput").addEventListener("input", function () {
    const inputVal = this.value;
    const options = document.querySelectorAll("#receiverList option");

    for (const option of options) {
        if (option.value === inputVal) {
            // dataset atributlarını düzgün oxu
            const clientCode = option.dataset.clientcode || '';
            const receiverName = option.dataset.receivername || '';

            document.getElementById("clientCode").value = clientCode;
            // Burada receiverInput-un dəyərini dəyişmək qarışıqlığa səbəb ola bilər,
            // əgər məqsəd varsa, saxla, yoxsa sil:
            // document.getElementById("receiverInput").value = receiverName;

            const matchedReceiver = receivers.find(r =>
                `${r.clientCode} ${r.receiverName}` === inputVal
            );

            if (matchedReceiver) {
                document.getElementById("senderName").value = matchedReceiver.receiverName || '';
                document.getElementById("senderAdd").value = matchedReceiver.receiverAddress || '';
                document.getElementById("senderNum").value = matchedReceiver.receiverPhoneNum || '';
                document.getElementById("priceType").value = matchedReceiver.qiymetVar || '';
                document.getElementById("edvType").value = matchedReceiver.isEDV || '';
            }

            return; // tapdısa daha yoxlama
        }
    }

    // Seçim uyğun gəlməsə formu təmizlə
    document.getElementById("clientCode").value = "";
    document.getElementById("senderName").value = "";
    document.getElementById("senderAdd").value = "";
    document.getElementById("senderNum").value = "";
    document.getElementById("priceType").value = "";
    document.getElementById("edvType").value = "";
});


        
//qiymet hissesi
        //inputlarin teyin olunmasi
            let priceEl = document.getElementById('orderPrice');
            let specialEl = document.getElementById('SpecialPrice');
            let discountEl = document.getElementById('discount');
            let subtotalEl = document.getElementById('subtotal');
            let edvEl = document.getElementById('edv');
            let totalEl = document.getElementById('total');
        function priceCalculation() {
            //kohne-teze qiymet
            const prices = {
                "prices": [
                    { "zoneId": 1, "serviceId": 1, "prices": { "old": 5, "new": 6 } },
                    { "zoneId": 1, "serviceId": 2, "prices": { "old": 4, "new": 5 } },
                    { "zoneId": 1, "serviceId": 3, "prices": { "old": 3, "new": 4 } },
                    { "zoneId": 1, "serviceId": 4, "prices": { "old": 2, "new": 3 } },
                    { "zoneId": 2, "serviceId": 1, "prices": { "old": 8, "new": 10 } },
                    { "zoneId": 2, "serviceId": 2, "prices": { "old": 6, "new": 8 } },
                    { "zoneId": 2, "serviceId": 3, "prices": { "old": 7, "new": 7 } },
                    { "zoneId": 2, "serviceId": 4, "prices": { "old": 6, "new": 6 } },
                    { "zoneId": 3, "serviceId": 1, "prices": { "old": 13, "new": 15 } },
                    { "zoneId": 3, "serviceId": 2, "prices": { "old": 11, "new": 13 } },
                    { "zoneId": 3, "serviceId": 3, "prices": { "old": 8, "new": 11 } },
                    { "zoneId": 3, "serviceId": 4, "prices": { "old": 7, "new": 10 } },
                    { "zoneId": 4, "serviceId": 1, "prices": { "old": 15, "new": 18 } },
                    { "zoneId": 4, "serviceId": 2, "prices": { "old": 12, "new": 14 } },
                    { "zoneId": 4, "serviceId": 3, "prices": { "old": 9, "new": 13 } },
                    { "zoneId": 4, "serviceId": 4, "prices": { "old": 8, "new": 12 } },
                    { "zoneId": 5, "serviceId": 1, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 5, "serviceId": 2, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 5, "serviceId": 3, "prices": { "old": 10, "new": 10 } },
                    { "zoneId": 5, "serviceId": 4, "prices": { "old": 8, "new": 8 } },
                    { "zoneId": 6, "serviceId": 1, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 6, "serviceId": 2, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 6, "serviceId": 3, "prices": { "old": 14, "new": 14 } },
                    { "zoneId": 6, "serviceId": 4, "prices": { "old": 12, "new": 12 } },
                    { "zoneId": 7, "serviceId": 1, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 7, "serviceId": 2, "prices": { "old": 0, "new": 0 } },
                    { "zoneId": 7, "serviceId": 3, "prices": { "old": 18, "new": 18 } },
                    { "zoneId": 7, "serviceId": 4, "prices": { "old": 16, "new": 16 } }
                    
                ]
            }
            
            let zoneId = parseInt(document.getElementById('zoneSelect').value);
            let serviceId = parseInt(document.getElementById('serviceType').value);
            let priceType = document.getElementById("priceType").value === "true"; // priceType true/false olacaq
            priceType=false;
            // `prices` içərisindən uyğun qiyməti tapmaq
            const priceObj = prices.prices.find(p => p.zoneId === zoneId && p.serviceId === serviceId);

            if (priceObj) {
                // priceType true olduqda yeni qiyməti seçirik, əks halda köhnə qiyməti seçirik
                const selectedPrice = priceType ? priceObj.prices.new : priceObj.prices.old;

                priceEl.value = selectedPrice;
                pricePutter();
            } else {
                // priceEl.value = "Xeta Bas Verdi";
                pricePutter();


            }
            pricePutter();
        }
        function pricePutter(){

            //Pricelerin Inputlara Doldurulmasi
            let price = parseFloat(priceEl.value) || 0;
            let special = parseFloat(specialEl.value) || 0;
            let discount = parseFloat(discountEl.value) || 0;

            // Qiymətlərin cəmi
            let sum = price + special;
            subtotalEl.value = sum.toFixed(2);

            // Güzəşt məbləği
            let discountAmount = (sum * discount) / 100;

            // Güzəşt sonrası məbləğ
            let discountedTotal = sum - discountAmount;



            if (document.getElementById("edvType").value == "true") {
                let edv = discountedTotal * 0.18;
                edvEl.value = edv.toFixed(2);
                let total = discountedTotal + edv;
                totalEl.value = total.toFixed(2);

            }
            else if (document.getElementById("edvType").value == "false") {
                edvEl.value = 0;
                totalEl.value = discountedTotal;

            }

        }
        //funksiyalarin isleneceyi yerlere birlesdirilmesi
        document.getElementById('zoneSelect').addEventListener('change', priceCalculation,pricePutter);
        document.getElementById('serviceType').addEventListener('change', priceCalculation,pricePutter);
        [priceEl, specialEl, discountEl].forEach(el =>
            el.addEventListener('input', pricePutter)
        );
           //eks duymesi
        

            function transferValues() {
                const senderName = document.getElementById("senderName");
                const senderAdd = document.getElementById("senderAdd");
                const senderNum = document.getElementById("senderNum");

                const acceptName = document.getElementById("acceptName");
                const acceptAdd = document.getElementById("acceptAdd");
                const acceptNum = document.getElementById("acceptNum");

                // Swap values using a temporary variable
                [senderName.value, acceptName.value] = [acceptName.value, senderName.value];
                [senderAdd.value, acceptAdd.value] = [acceptAdd.value, senderAdd.value];
                [senderNum.value, acceptNum.value] = [acceptNum.value, senderNum.value];
            }
            //date-hour birlesdiren
        document.getElementById("order-form").addEventListener("submit", function (e) {
            const date = document.getElementById("start-date").value;
            const time = document.getElementById("start-time").value;

            if (!date) {
                alert("Tarixi daxil edin");
                e.preventDefault();
                return;
            }

            if (!time) {
                alert("Saatı daxil edin");
                e.preventDefault();
                return;
            }

            // Tarix və saatı ISO 8601 formatında birləşdiririk (2025-05-17T14:30)
            const combinedDateTime = date + "T" + time;
            document.getElementById("StartDate").value = combinedDateTime;
        });
        // window.addEventListener('DOMContentLoaded', () => {
        //     const now = new Date();

        //     // Format date as yyyy-MM-dd
        //     const date = now.toISOString().split('T')[0];

        //     // Format time as HH:mm (24-hour format)
        //     const time = now.toTimeString().slice(0, 5);

        //     document.getElementById("start-date").value = date;
        //     document.getElementById("start-time").value = time;
        // });


        //kuryerlerin sinxronlasdirilmasi 
        document.getElementById("from-courier").addEventListener("change", function () {
            const selectedValue = this.value;
            const toCourier = document.getElementById("to-courier");

            // Set the selected value in the second select
            toCourier.value = selectedValue;
        });
    </script>
</body>
</html>


 
